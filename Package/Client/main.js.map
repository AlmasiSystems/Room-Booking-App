{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/admin/admin.component.css","webpack:///./src/app/components/admin/admin.component.html","webpack:///./src/app/components/admin/admin.component.ts","webpack:///./src/app/components/employee/employee.component.css","webpack:///./src/app/components/employee/employee.component.html","webpack:///./src/app/components/employee/employee.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/listunit/listunit.component.css","webpack:///./src/app/components/listunit/listunit.component.html","webpack:///./src/app/components/listunit/listunit.component.ts","webpack:///./src/app/components/search/search.component.css","webpack:///./src/app/components/search/search.component.html","webpack:///./src/app/components/search/search.component.ts","webpack:///./src/app/components/unit-form/unit-form.component.css","webpack:///./src/app/components/unit-form/unit-form.component.html","webpack:///./src/app/components/unit-form/unit-form.component.ts","webpack:///./src/app/models/checkin.model.ts","webpack:///./src/app/models/customer.model.ts","webpack:///./src/app/models/employee.model.ts","webpack:///./src/app/models/hotel.model.ts","webpack:///./src/app/models/hotelchain.model.ts","webpack:///./src/app/models/reservation.model.ts","webpack:///./src/app/models/room.model.ts","webpack:///./src/app/models/unit.ts","webpack:///./src/app/services/api.service.ts","webpack:///./src/app/services/unit.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ListunitComponent } from './components/listunit/listunit.component';\r\nimport { UnitFormComponent } from './components/unit-form/unit-form.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { EmployeeComponent } from './components/employee/employee.component';\r\nimport { SearchComponent } from './components/search/search.component';\r\nimport { AdminComponent } from './components/admin/admin.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', redirectTo: 'home', pathMatch: 'full'},\r\n  {path: 'home', component: HomeComponent},\r\n  {path: 'search', component: SearchComponent},\r\n  {path: 'employee', component: EmployeeComponent},\r\n  {path: 'admin', component: AdminComponent},\r\n  {path: 'unittest/units', component: ListunitComponent},\r\n  {path: 'unittest/:id/units', component: ListunitComponent},\r\n  {path: 'op', component: UnitFormComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n</div>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Room-Booking-App-Client';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpModule } from '@angular/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\n\r\nimport { UnitService } from './services/unit.service';\r\nimport { ApiService } from './services/api.service';\r\n\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { EmployeeComponent } from './components/employee/employee.component';\r\nimport { SearchComponent } from './components/search/search.component';\r\nimport { ListunitComponent } from './components/listunit/listunit.component';\r\nimport { UnitFormComponent } from './components/unit-form/unit-form.component';\r\nimport { AdminComponent } from './components/admin/admin.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ListunitComponent,\r\n    UnitFormComponent,\r\n    HomeComponent,\r\n    EmployeeComponent,\r\n    SearchComponent,\r\n    AdminComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    NgMultiSelectDropDownModule.forRoot()\r\n  ],\r\n  providers: [UnitService, ApiService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRtaW4vYWRtaW4uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class = 'container'>\\r\\n  <div class = 'row'>\\r\\n    <div class = 'col-md-12'>\\r\\n      <button type = 'button' class = 'btn btn-primary' (click) = 'onBack()'>Back</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class = 'row'>\\r\\n    <div class = 'col-md-12'>\\r\\n      <ngb-tabset>\\r\\n\\r\\n        <ngb-tab title = 'Customers'>\\r\\n          <ng-template ngbTabContent>\\r\\n            <button class = 'btn btn-primary' (click)='openCreateCustomer(createCustomer)'>Add Customer</button>\\r\\n            <table class = 'table table-striped'>\\r\\n              <thead>\\r\\n                <th>SIN</th>\\r\\n                <th>Name</th>\\r\\n                <th>Address</th>\\r\\n                <th></th>\\r\\n                <th></th>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor = 'let customer of customers'>\\r\\n                  <td>{{customer.sin}}</td>\\r\\n                  <td>{{customer.getName()}}</td>\\r\\n                  <td>{{customer.getAddress()}}</td>\\r\\n                  <td>\\r\\n                    <button class = 'btn btn-primary' (click)='openUpdateCustomer(updateCustomer, customer)'>Update</button>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <button class = 'btn btn-danger' (click)='onDeleteCustomer(customer)'>Delete</button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </ng-template>\\r\\n        </ngb-tab>\\r\\n\\r\\n        <ngb-tab title = 'Employees'>\\r\\n          <ng-template ngbTabContent>\\r\\n            <button class = 'btn btn-primary' (click)='openCreateEmployee(createEmployee)'>Add Employee</button>\\r\\n            <table class = 'table table-striped'>\\r\\n              <thead>\\r\\n                <th>SIN</th>\\r\\n                <th>Name</th>\\r\\n                <th>Address</th>\\r\\n                <th>Hotel Chain</th>\\r\\n                <th>Hotel ID</th>\\r\\n                <th></th>\\r\\n                <th></th>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor = 'let employee of employees'>\\r\\n                  <td>{{employee.sin}}</td>\\r\\n                  <td>{{employee.getName()}}</td>\\r\\n                  <td>{{employee.getAddress()}}</td>\\r\\n                  <td>{{employee.hotel.hotelChain.hcName}}</td>\\r\\n                  <td>{{employee.hotel.hotelId}}</td>\\r\\n                  <td>\\r\\n                    <button class = 'btn btn-primary' (click)='openUpdateEmployee(updateEmployee, employee)'>Update</button>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <button class = 'btn btn-danger' (click)='onDeleteEmployee(employee)'>Delete</button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </ng-template>\\r\\n        </ngb-tab>\\r\\n\\r\\n        <ngb-tab title = 'Hotels'>\\r\\n          <ng-template ngbTabContent>\\r\\n            <button class = 'btn btn-primary' (click)='openCreateHotel(createHotel)'>Add Hotel</button>\\r\\n            <table class = 'table table-striped'>\\r\\n              <thead>\\r\\n                <th>Hotel Chain</th>\\r\\n                <th>Hotel ID</th>\\r\\n                <th>Address</th>\\r\\n                <th>Phone Number</th>\\r\\n                <th>Rating</th>\\r\\n                <th>Number of Rooms</th>\\r\\n                <th></th>\\r\\n                <th></th>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor = 'let hotel of hotels'>\\r\\n                  <td>{{hotel.hotelChain.hcName}}</td>\\r\\n                  <td>{{hotel.hotelId}}</td>\\r\\n                  <td>{{hotel.getAddress()}}</td>\\r\\n                  <td>{{hotel.phoneNumber}}</td>\\r\\n                  <td>{{hotel.rating}}</td>\\r\\n                  <td>{{hotel.numberOfRooms}}</td>\\r\\n                  <td>\\r\\n                    <button class = 'btn btn-primary' (click)='openUpdateHotel(updateHotel, hotel)'>Update</button>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <button class = 'btn btn-danger' (click)='onDeleteHotel(hotel)'>Delete</button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </ng-template>\\r\\n        </ngb-tab>\\r\\n\\r\\n        <ngb-tab title = 'Rooms'>\\r\\n          <ng-template ngbTabContent>\\r\\n            <button class = 'btn btn-primary' (click)='openCreateRoom(createRoom)'>Add Room</button>\\r\\n            <table class = 'table table-striped'>\\r\\n              <thead>\\r\\n                <th>Hotel Chain</th>\\r\\n                <th>Hotel ID</th>\\r\\n                <th>Address</th>\\r\\n                <th>Room Number</th>\\r\\n                <th>View Type</th>\\r\\n                <th>Capacity</th>\\r\\n                <th>Price ($ CAD)</th>\\r\\n                <th>Extendable</th>\\r\\n                <th>Area (ft^2)</th>\\r\\n                <th></th>\\r\\n                <th></th>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor = 'let room of rooms'>\\r\\n                  <td>{{room.hotel.hotelChain.hcName}}</td>\\r\\n                  <td>{{room.hotel.hotelId}}</td>\\r\\n                  <td>{{room.hotel.getAddress()}}</td>\\r\\n                  <td>{{room.roomNumber}}</td>\\r\\n                  <td>{{room.viewType}}</td>\\r\\n                  <td>{{room.capacity}}</td>\\r\\n                  <td>{{room.price}}</td>\\r\\n                  <td>{{room.extendable ? 'Yes' : 'No'}}</td>\\r\\n                  <td>{{room.area}}</td>\\r\\n                  <td>\\r\\n                    <button class = 'btn btn-primary' (click)='openUpdateRoom(updateRoom, room)'>Update</button>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                    <button class = 'btn btn-danger' (click)='onDeleteRoom(room)'>Delete</button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </ng-template>\\r\\n        </ngb-tab>\\r\\n\\r\\n      </ngb-tabset>\\r\\n    </div>\\r\\n  </div> \\r\\n</div>\\r\\n\\r\\n\\r\\n<ng-template #createCustomer let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Create Customer</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        SIN \\r\\n        <input type = 'text' class = 'form-control' name = 'sin' [(ngModel)] = 'customer.sin'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Given Name\\r\\n        <input type = 'text' class = 'form-control' name = 'givenName' [(ngModel)] = 'customer.givenName'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Family Name\\r\\n        <input type = 'text' class = 'form-control' name = 'familyName' [(ngModel)] = 'customer.familyName'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Street Number\\r\\n        <input type = 'number' min = '0' class = 'form-control' name = 'streetNumber' [(ngModel)] = 'customer.streetNumber'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Street Name\\r\\n        <input type = 'text' class= 'form-control' name = 'streetName' [(ngModel)] = 'customer.streetName'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        City\\r\\n        <input type = 'text' class= 'form-control' name = 'city' [(ngModel)] = 'customer.city'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        State\\r\\n        <input type = 'text' maxlength = '2' class= 'form-control' name = 'state' [(ngModel)] = 'customer.state'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Country\\r\\n        <input type = 'text' maxlength = '2' class= 'form-control' name = 'country' [(ngModel)] = 'customer.country'>\\r\\n      </label>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onCreateCustomer(modal)\\\">Create</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #updateCustomer let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Update Customer</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        SIN \\r\\n        <h5>{{customer.sin}}</h5>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Given Name\\r\\n        <input type = 'text' class = 'form-control' name = 'givenName' [(ngModel)] = 'customer.givenName'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Family Name\\r\\n        <input type = 'text' class = 'form-control' name = 'familyName' [(ngModel)] = 'customer.familyName'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Street Number\\r\\n        <input type = 'number' min = '0' class = 'form-control' name = 'streetNumber' [(ngModel)] = 'customer.streetNumber'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Street Name\\r\\n        <input type = 'text' class= 'form-control' name = 'streetName' [(ngModel)] = 'customer.streetName'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        City\\r\\n        <input type = 'text' class= 'form-control' name = 'city' [(ngModel)] = 'customer.city'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        State\\r\\n        <input type = 'text' maxlength = '2' class= 'form-control' name = 'state' [(ngModel)] = 'customer.state'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Country\\r\\n        <input type = 'text' maxlength = '2' class= 'form-control' name = 'country' [(ngModel)] = 'customer.country'>\\r\\n      </label>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onUpdateCustomer(modal)\\\">Update</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n<ng-template #createEmployee let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Create Employee</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        SIN \\r\\n        <input type = 'text' class = 'form-control' name = 'sin' [(ngModel)] = 'employee.sin'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Given Name\\r\\n        <input type = 'text' class = 'form-control' name = 'givenName' [(ngModel)] = 'employee.givenName'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Family Name\\r\\n        <input type = 'text' class = 'form-control' name = 'familyName' [(ngModel)] = 'employee.familyName'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Street Number\\r\\n        <input type = 'number' min = '0' class = 'form-control' name = 'streetNumber' [(ngModel)] = 'employee.streetNumber'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Street Name\\r\\n        <input type = 'text' class= 'form-control' name = 'streetName' [(ngModel)] = 'employee.streetName'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        City\\r\\n        <input type = 'text' class= 'form-control' name = 'city' [(ngModel)] = 'employee.city'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        State\\r\\n        <input type = 'text' maxlength = '2' class= 'form-control' name = 'state' [(ngModel)] = 'employee.state'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Country\\r\\n        <input type = 'text' maxlength = '2' class= 'form-control' name = 'country' [(ngModel)] = 'employee.country'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Hotel ID\\r\\n        <input type = 'number' min = '0' class = 'form-control' name = 'hotelId' [(ngModel)] = 'employee.hotel.hotelId'>\\r\\n      </label>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onCreateEmployee(modal)\\\">Create</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #updateEmployee let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Update Employee</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        SIN \\r\\n        <h5>{{employee.sin}}</h5>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Given Name\\r\\n        <input type = 'text' class = 'form-control' name = 'givenName' [(ngModel)] = 'employee.givenName'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Family Name\\r\\n        <input type = 'text' class = 'form-control' name = 'familyName' [(ngModel)] = 'employee.familyName'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Street Number\\r\\n        <input type = 'number' min = '0' class = 'form-control' name = 'streetNumber' [(ngModel)] = 'employee.streetNumber'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Street Name\\r\\n        <input type = 'text' class= 'form-control' name = 'streetName' [(ngModel)] = 'employee.streetName'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        City\\r\\n        <input type = 'text' class= 'form-control' name = 'city' [(ngModel)] = 'employee.city'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        State\\r\\n        <input type = 'text' maxlength = '2' class= 'form-control' name = 'state' [(ngModel)] = 'employee.state'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Country\\r\\n        <input type = 'text' maxlength = '2' class= 'form-control' name = 'country' [(ngModel)] = 'employee.country'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Hotel ID\\r\\n        <input type = 'number' min = '0' class = 'form-control' name = 'hotelId' [(ngModel)] = 'employee.hotel.hotelId'>\\r\\n      </label>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onUpdateEmployee(modal)\\\">Update</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n<ng-template #createHotel let-modal>\\r\\n    <div class=\\\"modal-header\\\">\\r\\n      <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Create Hotel</h4>\\r\\n      <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <div class = 'row'>\\r\\n        <label>\\r\\n          Hotel Chain\\r\\n          <input type = 'text' class = 'form-control' name = 'hcName' [(ngModel)] = 'hotel.hotelChain.hcName'>\\r\\n        </label>\\r\\n      </div>\\r\\n      <div class = 'row'>\\r\\n        <label>\\r\\n          Street Number\\r\\n          <input type = 'number' min = '0' class = 'form-control' name = 'streetNumber' [(ngModel)] = 'hotel.streetNumber'>\\r\\n        </label>\\r\\n      </div>\\r\\n      <div class = 'row'>\\r\\n        <label>\\r\\n          Street Name\\r\\n          <input type = 'text' class = 'form-control' name = 'streetName' [(ngModel)] = 'hotel.streetName'>\\r\\n        </label>\\r\\n      </div>\\r\\n      <div class = 'row'>\\r\\n        <label>\\r\\n          City\\r\\n          <input type = 'text' class = 'form-control' name = 'city' [(ngModel)] = 'hotel.city'>\\r\\n        </label>\\r\\n      </div>\\r\\n      <div class = 'row'>\\r\\n        <label>\\r\\n          State\\r\\n          <input type = 'text' maxlength = '2' class= 'form-control' name = 'state' [(ngModel)] = 'hotel.state'>\\r\\n        </label>\\r\\n      </div>\\r\\n      <div class = 'row'>\\r\\n        <label>\\r\\n          Country\\r\\n          <input type = 'text' maxlength = '2' class= 'form-control' name = 'country' [(ngModel)] = 'hotel.country'>\\r\\n        </label>\\r\\n      </div>\\r\\n      <div class = 'row'>\\r\\n        <label>\\r\\n          Rating\\r\\n          <select class = 'form-control' name = 'rating' [(ngModel)] = 'hotel.rating'>\\r\\n            <option>1</option>\\r\\n            <option>2</option>\\r\\n            <option>3</option>\\r\\n            <option>4</option>\\r\\n            <option>5</option>\\r\\n          </select>\\r\\n        </label>\\r\\n      </div>\\r\\n      <div class = 'row'>\\r\\n        <label>\\r\\n          Phone Number\\r\\n          <input type = 'text' class = 'form-control' name = 'phoneNumber' [(ngModel)] = 'hotel.phoneNumber'>\\r\\n        </label>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"modal-footer\\\">\\r\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onCreateHotel(modal)\\\">Create</button>\\r\\n    </div>\\r\\n  </ng-template>\\r\\n\\r\\n\\r\\n\\r\\n<ng-template #updateHotel let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Update Hotel</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Hotel Chain\\r\\n        <h5>{{hotel.hotelChain.hcName}}</h5>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Hotel ID\\r\\n        <h5>{{hotel.hotelId}}</h5>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Street Number\\r\\n        <input type = 'number' min = '0' class = 'form-control' name = 'streetNumber' [(ngModel)] = 'hotel.streetNumber'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Street Name\\r\\n        <input type = 'text' class = 'form-control' name = 'streetName' [(ngModel)] = 'hotel.streetName'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        City\\r\\n        <input type = 'text' class = 'form-control' name = 'city' [(ngModel)] = 'hotel.city'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        State\\r\\n        <input type = 'text' maxlength = '2' class= 'form-control' name = 'state' [(ngModel)] = 'hotel.state'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Country\\r\\n        <input type = 'text' maxlength = '2' class= 'form-control' name = 'country' [(ngModel)] = 'hotel.country'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Rating\\r\\n        <select class = 'form-control' name = 'rating' [(ngModel)] = 'hotel.rating'>\\r\\n          <option>1</option>\\r\\n          <option>2</option>\\r\\n          <option>3</option>\\r\\n          <option>4</option>\\r\\n          <option>5</option>\\r\\n        </select>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Phone Number\\r\\n        <input type = 'text' class = 'form-control' name = 'phoneNumber' [(ngModel)] = 'hotel.phoneNumber'>\\r\\n      </label>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onUpdateHotel(modal)\\\">Update</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<ng-template #createRoom let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Create Room</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Hotel ID\\r\\n        <input type = 'text' class = 'form-control' name = 'hotelId' [(ngModel)] = 'room.hotel.hotelId'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Room Number\\r\\n        <input type = 'number' min = '0' class = 'form-control' name = 'roomNumber' [(ngModel)] = 'room.roomNumber'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        View Type\\r\\n        <select class = 'form-control' name = 'viewType' [(ngModel)] = 'room.viewType'>\\r\\n          <option>Sea</option>\\r\\n          <option>Mountain</option>\\r\\n        </select>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Capacity\\r\\n        <input type = 'number' min = '0' class = 'form-control' name = 'capacity' [(ngModel)] = 'room.capacity'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Price\\r\\n        <input type = 'number' min = '0' class = 'form-control' name = 'price' [(ngModel)] = 'room.price'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Extendable\\r\\n        <select class = 'form-control' name = 'extendable' [(ngModel)] = 'room.extendable'>\\r\\n          <option [ngValue] = 'true'>Yes</option>\\r\\n          <option [ngValue] = 'false'>No</option>\\r\\n        </select>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Area \\r\\n        <input type = 'number' min = '0' class = 'form-control' name = 'area' [(ngModel)] = 'room.area'>\\r\\n      </label>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onCreateRoom(modal)\\\">Create</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n<ng-template #updateRoom let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Update Room</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Hotel ID\\r\\n        <h5>{{room.hotel.hotelId}}</h5>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Room Number\\r\\n        <h5>{{room.roomNumber}}</h5>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        View Type\\r\\n        <select class = 'form-control' name = 'viewType' [(ngModel)] = 'room.viewType'>\\r\\n          <option>Sea</option>\\r\\n          <option>Mountain</option>\\r\\n        </select>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Capacity\\r\\n        <input type = 'number' min = '0' class = 'form-control' name = 'capacity' [(ngModel)] = 'room.capacity'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Price\\r\\n        <input type = 'number' min = '0' class = 'form-control' name = 'price' [(ngModel)] = 'room.price'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Extendable\\r\\n        <select class = 'form-control' name = 'extendable' [(ngModel)] = 'room.extendable'>\\r\\n          <option [ngValue] = 'true'>Yes</option>\\r\\n          <option [ngValue] = 'false'>No</option>\\r\\n        </select>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Area \\r\\n        <input type = 'number' min = '0' class = 'form-control' name = 'area' [(ngModel)] = 'room.area'>\\r\\n      </label>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onUpdateRoom(modal)\\\">Update</button>\\r\\n  </div>\\r\\n</ng-template>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { ApiService } from '../../services/api.service';\r\n\r\nimport { Room } from 'src/app/models/room.model';\r\nimport { Customer } from 'src/app/models/customer.model';\r\nimport { Employee } from 'src/app/models/employee.model';\r\nimport { Hotel } from 'src/app/models/hotel.model';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  templateUrl: './admin.component.html',\r\n  styleUrls: ['./admin.component.css']\r\n})\r\nexport class AdminComponent implements OnInit {\r\n  private customers: Customer[];\r\n  private employees: Employee[];\r\n  private hotels: Hotel[];\r\n  private rooms: Room[];\r\n\r\n  private customer: Customer;\r\n  private employee: Employee;\r\n  private hotel: Hotel;\r\n  private room: Room;\r\n\r\n  constructor(\r\n    private location: Location,\r\n    private apiService: ApiService,\r\n    private modalService: NgbModal\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.customer = new Customer();\r\n    this.employee = new Employee();\r\n    this.hotel = new Hotel();\r\n    this.room = new Room();\r\n    this.getCustomers();\r\n    this.getEmployees();\r\n    this.getHotels();\r\n    this.getRooms();\r\n  }\r\n\r\n  public onBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  private getCustomers(): void {\r\n    this.apiService.getCustomers()\r\n      .subscribe(customers => {\r\n        this.customers = [];\r\n        for (const customer of customers) {\r\n          this.customers.push(this.apiService.parseToCustomer(customer));\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  private getEmployees(): void {\r\n    this.apiService.getEmployees()\r\n      .subscribe(employees => {\r\n        this.employees = [];\r\n        for (const employee of employees) {\r\n          this.employees.push(this.apiService.parseToEmployee(employee));\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error)\r\n      });\r\n  }\r\n\r\n  private getHotels(): void {\r\n    this.apiService.getHotels()\r\n      .subscribe(hotels => {\r\n        this.hotels = [];\r\n        for (const hotel of hotels) {\r\n          this.hotels.push(this.apiService.parseToHotel(hotel));\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  private getRooms(): void {\r\n    this.apiService.getRooms()\r\n      .subscribe(rooms => {\r\n        this.rooms = [];\r\n        for (const room of rooms) {\r\n          this.rooms.push(this.apiService.parseToRoom(room));\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n//=========================================================================================\r\n  public openCreateCustomer(createCustomer: NgbModal): void {\r\n    this.customer = new Customer();\r\n    this.modalService.open(createCustomer, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n    }, (reason) => {\r\n    });\r\n  }\r\n\r\n  public openCreateEmployee(createEmployee: NgbModal): void {\r\n    this.employee = new Employee();\r\n    this.modalService.open(createEmployee, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n    }, (reason) => {\r\n    });\r\n  }\r\n\r\n  public openCreateHotel(createHotel: NgbModal): void {\r\n    this.hotel = new Hotel();\r\n    this.modalService.open(createHotel, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n    }, (reason) => {\r\n    });\r\n  }\r\n\r\n  public openCreateRoom(createRoom: NgbModal): void {\r\n    this.room = new Room();\r\n    this.modalService.open(createRoom, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n    }, (reason) => {\r\n    });\r\n  }\r\n\r\n//=========================================================================================\r\n  public openUpdateCustomer(updateCustomer: NgbModal, customer: Customer): void {\r\n    this.customer = customer;\r\n    this.modalService.open(updateCustomer, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n    }, (reason) => {\r\n    });\r\n  }\r\n\r\n  public openUpdateEmployee(updateEmployee: NgbModal, employee: Employee): void {\r\n    this.employee = employee;\r\n    this.modalService.open(updateEmployee, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n    }, (reason) => {\r\n    });\r\n  }\r\n\r\n  public openUpdateHotel(updateHotel: NgbModal, hotel: Hotel): void {\r\n    this.hotel = hotel;\r\n    this.modalService.open(updateHotel, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n    }, (reason) => {\r\n    });\r\n  }\r\n\r\n  public openUpdateRoom(updateRoom: NgbModal, room: Room): void {\r\n    this.room = room;;\r\n    this.modalService.open(updateRoom, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n    }, (reason) => {\r\n    });\r\n  }\r\n\r\n//=========================================================================================\r\n\r\n  public onCreateCustomer(modal): void {\r\n    if (!this.checkCustomerInfoValid()) {\r\n      return;\r\n    }\r\n\r\n    this.apiService.createCustomer(this.getCustomerParams())\r\n      .subscribe(result => {\r\n        this.customers.push(this.customer);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    modal.close('');\r\n  }\r\n\r\n  public onCreateEmployee(modal): void {\r\n    if (!this.checkEmployeeInfoValid()) {\r\n      return;\r\n    }\r\n\r\n    this.apiService.createEmployee(this.getEmployeeParams())\r\n      .subscribe(result => {\r\n        this.employees.push(this.employee);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    modal.close('');\r\n  }\r\n\r\n  public onCreateHotel(modal): void {\r\n    if (!this.checkHotelInfoValid()) {\r\n      return;\r\n    }\r\n\r\n    this.apiService.createHotel(this.getHotelParams())\r\n      .subscribe(result => {\r\n        this.getHotels();\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    modal.close('');\r\n  }\r\n\r\n  public onCreateRoom(modal): void {\r\n    if (!this.checkRoomInfoValid()) {\r\n      return;\r\n    }\r\n\r\n    this.apiService.createRoom(this.getRoomParams())\r\n      .subscribe(result => {\r\n        this.getRooms();\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    modal.close('');\r\n  }\r\n\r\n//=========================================================================================\r\n\r\n  public onUpdateCustomer(modal): void {\r\n    if (!this.checkCustomerInfoValid()) {\r\n      return;\r\n    }\r\n\r\n    this.apiService.updateCustomer(this.getCustomerParams())\r\n      .subscribe(result => {\r\n        const newCustomers = [];\r\n        for (const customer of this.customers) {\r\n          if (customer.sin != this.customer.sin) {\r\n            newCustomers.push(customer);\r\n          } else {\r\n            newCustomers.push(this.customer);\r\n          }\r\n        } \r\n        this.customers = newCustomers;\r\n      },\r\n      (error) => {\r\n        console.log(error)\r\n      });\r\n\r\n    modal.close('');\r\n  }\r\n\r\n  public onUpdateEmployee(modal): void {\r\n    if (!this.checkEmployeeInfoValid()) {\r\n      return;\r\n    }\r\n\r\n    this.apiService.updateEmployee(this.getEmployeeParams())\r\n      .subscribe(result => {\r\n        const newEmployees = [];\r\n        for (const employee of this.employees) {\r\n          if (employee.sin != this.employee.sin) {\r\n            newEmployees.push(employee);\r\n          } else {\r\n            newEmployees.push(this.employee);\r\n          }\r\n        } \r\n        this.employees = newEmployees;\r\n      },\r\n      (error) => {\r\n        console.log(error)\r\n      });\r\n\r\n    modal.close('');\r\n  }\r\n\r\n  public onUpdateHotel(modal): void {\r\n    if (!this.checkHotelInfoValid()) {\r\n      return;\r\n    }\r\n\r\n    this.apiService.updateHotel(this.getHotelParams())\r\n      .subscribe(result => {\r\n        const newHotels = [];\r\n        for (const h of this.hotels) {\r\n          if (h.hotelId != this.hotel.hotelId) {\r\n            newHotels.push(h);\r\n          } else {\r\n            newHotels.push(this.hotel);\r\n          }\r\n        } \r\n        this.hotels = newHotels;\r\n      },\r\n      (error) => {\r\n        console.log(error)\r\n      });\r\n\r\n    modal.close('');\r\n  }\r\n\r\n  public onUpdateRoom(modal): void {\r\n    if (!this.checkRoomInfoValid()) {\r\n      return;\r\n    }\r\n\r\n    this.apiService.updateRoom(this.getRoomParams())\r\n    .subscribe(result => {\r\n      const newRooms = [];\r\n      for (const r of this.rooms) {\r\n        if (r.hotel.hotelId != this.room.hotel.hotelId || r.roomNumber != this.room.roomNumber) {\r\n          newRooms.push(r);\r\n        } else {\r\n          newRooms.push(this.room);\r\n        }\r\n      } \r\n      this.rooms = newRooms;\r\n    },\r\n    (error) => {\r\n      console.log(error)\r\n    });\r\n\r\n    modal.close('');\r\n  }\r\n\r\n//=========================================================================================\r\n\r\n  public onDeleteCustomer(customer: Customer): void {\r\n    this.apiService.deleteCustomer(customer.sin)\r\n      .subscribe(result => {\r\n        const newCustomers = [];\r\n        for (const cust of this.customers) {\r\n          if (cust.sin != customer.sin) {\r\n            newCustomers.push(cust);\r\n          }\r\n        }\r\n        this.customers = newCustomers;\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  public onDeleteEmployee(employee: Employee): void {\r\n    this.apiService.deleteEmployee(employee.sin)\r\n    .subscribe(result => {\r\n      const newEmployees = [];\r\n      for (const emp of this.employees) {\r\n        if (emp.sin != employee.sin) {\r\n          newEmployees.push(emp);\r\n        }\r\n      }\r\n      this.employees = newEmployees;\r\n    },\r\n    (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  public onDeleteHotel(hotel: Hotel): void {\r\n    this.apiService.deleteHotel(hotel.hotelId)\r\n    .subscribe(result => {\r\n      const newHotels = [];\r\n      for (const h of this.hotels) {\r\n        if (h.hotelId != hotel.hotelId) {\r\n          newHotels.push(h);\r\n        }\r\n      }\r\n      this.hotels = newHotels;\r\n    },\r\n    (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  public onDeleteRoom(room: Room): void {\r\n    this.apiService.deleteRoom(room.hotel.hotelId, room.roomNumber)\r\n    .subscribe(result => {\r\n      const newRooms = [];\r\n      for (const r of this.rooms) {\r\n        if (r.hotel.hotelId != room.hotel.hotelId || r.roomNumber != room.roomNumber) {\r\n          newRooms.push(r);\r\n        }\r\n      }\r\n      this.rooms = newRooms;\r\n    },\r\n    (error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n//=========================================================================================\r\n\r\n\r\n  private getCustomerParams() {\r\n    const customerParams: any = {};\r\n    customerParams.customer_sin = this.customer.sin;\r\n    customerParams.given_name = this.customer.givenName;\r\n    customerParams.family_name = this.customer.familyName;\r\n    customerParams.street_name = this.customer.streetName;\r\n    customerParams.street_number = +this.customer.streetNumber;\r\n    customerParams.city = this.customer.city;\r\n    customerParams.state = this.customer.state;\r\n    customerParams.country = this.customer.country;\r\n    return customerParams;\r\n  }\r\n\r\n  private getEmployeeParams() {\r\n    const employeeParams: any = {};\r\n    employeeParams.employee_sin = this.employee.sin;\r\n    employeeParams.given_name = this.employee.givenName;\r\n    employeeParams.family_name = this.employee.familyName;\r\n    employeeParams.street_name = this.employee.streetName;\r\n    employeeParams.street_number = +this.employee.streetNumber;\r\n    employeeParams.city = this.employee.city;\r\n    employeeParams.state = this.employee.state;\r\n    employeeParams.country = this.employee.country;\r\n    employeeParams.hotel_id = +this.employee.hotel.hotelId;\r\n    return employeeParams;\r\n  }\r\n\r\n  private getHotelParams() {\r\n    const hotelParams: any = {};\r\n    hotelParams.hc_name = this.hotel.hotelChain.hcName;\r\n    hotelParams.hotel_id = this.hotel.hotelId;\r\n    hotelParams.street_name = this.hotel.streetName;\r\n    hotelParams.street_number = +this.hotel.streetNumber;\r\n    hotelParams.city = this.hotel.city;\r\n    hotelParams.state = this.hotel.state;\r\n    hotelParams.country = this.hotel.country;\r\n    hotelParams.rating = +this.hotel.rating;\r\n    hotelParams.phone_number = this.hotel.phoneNumber;\r\n    hotelParams.number_of_rooms = this.hotel.numberOfRooms;\r\n    return hotelParams;\r\n  }\r\n\r\n  private getRoomParams() {\r\n    const roomParams: any = {};\r\n    roomParams.hotel_id = +this.room.hotel.hotelId;\r\n    roomParams.room_number = +this.room.roomNumber;\r\n    roomParams.view_type = this.room.viewType;\r\n    roomParams.capacity = +this.room.capacity;\r\n    roomParams.price = +this.room.price;\r\n    roomParams.extendable = !!+this.room.extendable;\r\n    roomParams.area = +this.room.area;\r\n    return roomParams;\r\n  }\r\n\r\n  private checkCustomerInfoValid(): boolean {\r\n    if (!this.customer.sin) {\r\n      window.alert('Sin is missing');\r\n      return false;\r\n    } else if (!this.customer.givenName) {\r\n      window.alert('Given name is missing');\r\n      return false;\r\n    } else if (!this.customer.familyName) {\r\n      window.alert('Family name is missing');\r\n      return false;\r\n    } else if (!this.customer.streetName) {\r\n      window.alert('Street name is missing');\r\n      return false;\r\n    } else if (!this.customer.streetNumber) {\r\n      window.alert('Street number is missing');\r\n      return false;\r\n    } else if (!this.customer.city) {\r\n      window.alert('City is missing');\r\n      return false;\r\n    } else if (!this.customer.state) {\r\n      window.alert('State is missing');\r\n      return false;\r\n    } else if (!this.customer.country) {\r\n      window.alert('Country is missing');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private checkEmployeeInfoValid(): boolean {\r\n    if (!this.employee.sin) {\r\n      window.alert('Sin is missing');\r\n      return false;\r\n    } else if (!this.employee.givenName) {\r\n      window.alert('Given name is missing');\r\n      return false;\r\n    } else if (!this.employee.familyName) {\r\n      window.alert('Family name is missing');\r\n      return false;\r\n    } else if (!this.employee.streetName) {\r\n      window.alert('Street name is missing');\r\n      return false;\r\n    } else if (!this.employee.streetNumber) {\r\n      window.alert('Street number is missing');\r\n      return false;\r\n    } else if (!this.employee.city) {\r\n      window.alert('City is missing');\r\n      return false;\r\n    } else if (!this.employee.state) {\r\n      window.alert('State is missing');\r\n      return false;\r\n    } else if (!this.employee.country) {\r\n      window.alert('Country is missing');\r\n      return false;\r\n    } else if (!this.employee.hotel.hotelId) {\r\n      window.alert('Hotel id is missing');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  \r\n  private checkHotelInfoValid(): boolean {\r\n    if (!this.hotel.hotelChain.hcName) {\r\n      window.alert('Hotel Chain is missing');\r\n      return false;\r\n    } else if (!this.hotel.streetName) {\r\n      window.alert('Street name is missing');\r\n      return false;\r\n    } else if (!this.hotel.streetNumber) {\r\n      window.alert('Street number is missing');\r\n      return false;\r\n    } else if (!this.hotel.city) {\r\n      window.alert('City is missing');\r\n      return false;\r\n    } else if (!this.hotel.state) {\r\n      window.alert('State is missing');\r\n      return false;\r\n    } else if (!this.hotel.country) {\r\n      window.alert('Country is missing');\r\n      return false;\r\n    } else if (!this.hotel.rating) {\r\n      window.alert('Rating is missing');\r\n      return false;\r\n    } else if (!this.hotel.phoneNumber) {\r\n      window.alert('Phone number is missing');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private checkRoomInfoValid(): boolean {\r\n    if (!this.room.hotel.hotelId) {\r\n      window.alert('Hotel id is missing');\r\n      return false;\r\n    } else if (!this.room.roomNumber) {\r\n      window.alert('Room number is missing');\r\n      return false;\r\n    } else if (!this.room.viewType) {\r\n      window.alert('View type is missing');\r\n      return false;\r\n    } else if (!this.room.price) {\r\n      window.alert('Price is missing');\r\n      return false;\r\n    } else if (!this.room.area) {\r\n      window.alert('Area is missing');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZW1wbG95ZWUvZW1wbG95ZWUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class = 'container'>\\r\\n  <div class = 'row'>\\r\\n    <div class = 'col-md-12'>\\r\\n      <button type = 'button' class = 'btn btn-primary' (click) = 'onBack()'>Back</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class = 'row'>\\r\\n    <div class = 'col-md-12'>\\r\\n      <ngb-tabset>\\r\\n\\r\\n        <ngb-tab title = 'All Reservations'>\\r\\n          <ng-template ngbTabContent>\\r\\n            <table class = 'table table-striped'>\\r\\n              <thead>\\r\\n                <th>Hotel Chain</th>\\r\\n                <th>Address</th>\\r\\n                <th>Hotel Id</th>\\r\\n                <th>Room Number</th>\\r\\n                <th>Start Date</th>\\r\\n                <th>End Date</th>\\r\\n                <th>Reservation Type</th>\\r\\n                <th>Customer Sin</th>\\r\\n                <th>Customer Name</th>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr *ngFor = 'let reservation of reservations'>\\r\\n                  <td>{{reservation.room.hotel.hotelChain.hcName}}</td>\\r\\n                  <td>{{reservation.room.hotel.getAddress()}}</td>\\r\\n                  <td>{{reservation.hotelId}}</td>\\r\\n                  <td>{{reservation.roomNumber}}</td>\\r\\n                  <td>{{reservation.startDate | date: 'medium' : 'UTC'}}</td>\\r\\n                  <td>{{reservation.endDate | date: 'medium' : 'UTC'}}</td>\\r\\n                  <td>{{reservation.reservationType ? 'Renting' : 'Booking'}}</td>\\r\\n                  <td>{{reservation.customer.sin}}</td>\\r\\n                  <td>{{reservation.customer.getName()}}</td>\\r\\n                  <td *ngIf = '!reservation.reservationType'>\\r\\n                    <button type = 'button' class = 'btn btn-primary' (click) = 'openCheckIn(checkin, reservation)'>Check in</button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </ng-template>\\r\\n        </ngb-tab>\\r\\n\\r\\n        <ngb-tab title = 'Create Renting'>\\r\\n          <ng-template ngbTabContent>\\r\\n            <div class = 'row'>\\r\\n              <div class = 'col-md-4'>\\r\\n                <form (ngSubmit) = 'onSearch()'>\\r\\n                  <div class = 'row'>\\r\\n                    <label>\\r\\n                      Hotel ID\\r\\n                      <input type = 'number' class = 'form-control' min = '0' name = 'hotelId' [(ngModel)] = 'hotelId'>\\r\\n                    </label>\\r\\n                  </div>\\r\\n                  <div class = 'row'>\\r\\n                    <label>\\r\\n                      Start Date\\r\\n                      <input type=\\\"datetime-local\\\" \\r\\n                              class = 'form-control'\\r\\n                              name=\\\"startDate\\\" value=\\\"0000-00-00T00:00\\\"\\r\\n                              min=\\\"0000-00-00T00:00\\\"\\r\\n                              [(ngModel)] =\\\"startDate\\\">\\r\\n                    </label>\\r\\n                  </div>\\r\\n                  <div class = 'row'>\\r\\n                    <label>\\r\\n                      End Date\\r\\n                      <input type=\\\"datetime-local\\\" \\r\\n                              class = 'form-control'\\r\\n                              name=\\\"endDate\\\" value=\\\"0000-00-00T00:00\\\"\\r\\n                              min=\\\"0000-00-00T00:00\\\"\\r\\n                              [(ngModel)] = 'endDate'>\\r\\n                    </label>     \\r\\n                  </div>                  \\r\\n                  <div class = 'row'>     \\r\\n                    <label>\\r\\n                        Rating (min)\\r\\n                        <select class = 'form-control' name = 'rating' [(ngModel)] = 'rating'>\\r\\n                          <option value = 'undefined'></option>\\r\\n                          <option>1</option>\\r\\n                          <option>2</option>\\r\\n                          <option>3</option>\\r\\n                          <option>4</option>\\r\\n                          <option>5</option>\\r\\n                        </select>\\r\\n                      </label>         \\r\\n                  </div>\\r\\n                  <div class = 'row'>\\r\\n                    <label>\\r\\n                      Room Capacity (# people) (min)\\r\\n                      <input class = 'form-control' min = '0' type = 'number' name = 'roomCapacity' [(ngModel)] = 'roomCapacity'>\\r\\n                    </label>\\r\\n                  </div>\\r\\n                  <div class = 'row'>\\r\\n                    <label>\\r\\n                      Area (ft^2) (min)\\r\\n                      <input class = 'form-control' min = '0' type = 'number' name = 'area' [(ngModel)] = 'area'>\\r\\n                    </label>\\r\\n                  </div>\\r\\n                  <div class = 'row'>\\r\\n                    <label>\\r\\n                      Price ($) (max)\\r\\n                      <input class = 'form-control' min = '0' type = 'number' name = 'price' [(ngModel)] = 'price'>\\r\\n                    </label>\\r\\n                  </div>\\r\\n                  <div class = 'row'>\\r\\n                    <button type = 'submit' class = 'btn btn-primary'>Search</button>\\r\\n                  </div>\\r\\n                </form>\\r\\n              </div>        \\r\\n              <div class = 'col-md-8'>\\r\\n                <table class = 'table table-striped'>\\r\\n                  <thead>\\r\\n                    <th>Hotel Chain</th>\\r\\n                    <th>Hotel ID</th>\\r\\n                    <th>Address</th>\\r\\n                    <th>Room Number</th>\\r\\n                    <th>View Type</th>\\r\\n                    <th>Capacity</th>\\r\\n                    <th>Price ($ CAD)</th>\\r\\n                    <th>Area (ft^2)</th>\\r\\n                    <th></th>\\r\\n                  </thead>\\r\\n                  <tbody>\\r\\n                    <tr *ngFor = 'let room of rooms'>\\r\\n                      <td>{{room.hotel.hotelChain.hcName}}</td>\\r\\n                      <td>{{room.hotel.hotelId}}</td>\\r\\n                      <td>{{room.hotel.getAddress()}}</td>\\r\\n                      <td>{{room.roomNumber}}</td>\\r\\n                      <td>{{room.viewType}}</td>\\r\\n                      <td>{{room.capacity}}</td>\\r\\n                      <td>${{room.price}} CAD</td>\\r\\n                      <td>{{room.area}}</td>\\r\\n                      <td>\\r\\n                        <button type = 'button' class = 'btn btn-primary' (click) = 'openRenting(renting, room)'>Rent</button>\\r\\n                      </td>\\r\\n                    </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n              </div>\\r\\n            </div>\\r\\n          </ng-template>\\r\\n        </ngb-tab>\\r\\n\\r\\n      </ngb-tabset>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<ng-template #checkin let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Check In</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <h6>Payment Information</h6>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Employee Sin\\r\\n        <input type = 'text' class = 'form-control' name = 'employeeSin' [(ngModel)] = 'checkIn.employeeSin'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Payment Amount ($ CAD)\\r\\n        <input type = 'number' step = '0.01' min = '0' class = 'form-control' name = 'payment' [(ngModel)] = 'checkIn.payment'>\\r\\n      </label>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onCheckIn(modal)\\\">Check In</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<ng-template #renting let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Create Renting</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <h6>Renting Information</h6>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Customer SIN \\r\\n        <input type = 'text' class = 'form-control' name = 'sin' [(ngModel)] = 'customer.sin'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Given name\\r\\n        <input type = 'text' class = 'form-control' name = 'givenName' [(ngModel)] = 'customer.givenName'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Family name\\r\\n        <input type = 'text' class = 'form-control' name = 'familyName' [(ngModel)] = 'customer.familyName'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Street name\\r\\n        <input type = 'text' class = 'form-control' name = 'streetName' [(ngModel)] = 'customer.streetName'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Street number\\r\\n        <input type = 'number' min = '0' class = 'form-control' name = 'streetNumber' [(ngModel)] = 'customer.streetNumber'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        City\\r\\n        <input type = 'text' class = 'form-control' name = 'city' [(ngModel)] = 'customer.city'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        State\\r\\n        <input type = 'text' class = 'form-control' maxlength = '2' name = 'state' [(ngModel)] = 'customer.state'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Country\\r\\n        <input type = 'text' class = 'form-control' maxlength = '2' name = 'country' [(ngModel)] = 'customer.country'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Employee SIN \\r\\n        <input type = 'text' class = 'form-control' name = 'employeeSin' [(ngModel)] = 'checkIn.employeeSin'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Payment Amount ($ CAD)\\r\\n        <input type = 'number' step = '0.01' min = '0' class = 'form-control' name = 'payment' [(ngModel)] = 'checkIn.payment'>\\r\\n      </label>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onCreateRenting(modal)\\\">Create Renting</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n      \"","import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { Reservation } from 'src/app/models/reservation.model';\r\nimport { CheckIn } from 'src/app/models/checkin.model';\r\nimport { Room } from 'src/app/models/room.model';\r\n\r\nimport { ApiService } from '../../services/api.service';\r\nimport { Customer } from 'src/app/models/customer.model';\r\n\r\n@Component({\r\n  selector: 'app-employee',\r\n  templateUrl: './employee.component.html',\r\n  styleUrls: ['./employee.component.css']\r\n})\r\nexport class EmployeeComponent implements OnInit {\r\n  private reservations: Reservation[];\r\n  private selectedReservation: Reservation;\r\n\r\n  private checkIn: CheckIn;\r\n\r\n  private hotelId: number;\r\n  private startDate: string;\r\n  private endDate: string;\r\n  private rating: number;\r\n  private roomCapacity: number;\r\n  private area: number;\r\n  private price: number;\r\n\r\n  private customer: Customer;\r\n\r\n  private rooms: Room[];\r\n  private selectedRoom: Room;\r\n\r\n  constructor(\r\n    private location: Location,\r\n    private apiService: ApiService,\r\n    private modalService: NgbModal\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.customer = new Customer();\r\n    this.checkIn = new CheckIn();\r\n    this.reservations = [];\r\n    this.rooms = [];\r\n    this.getReservations();\r\n  }\r\n\r\n  public onBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n\r\n  public onSearch(): void {\r\n    if (!this.checkSearchFormValid()) {\r\n      return;\r\n    }\r\n    this.apiService.getRoomsByHotelIdSearch(this.getSearchParams())\r\n      .subscribe(roomsJson => {\r\n        if (roomsJson.length == 0 ) {\r\n          window.alert('No rooms found for search');\r\n          return;\r\n        }\r\n        this.rooms = [];\r\n        for (const roomJson of roomsJson) {\r\n          this.rooms.push(this.apiService.parseToRoom(roomJson));\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  private getSearchParams() {\r\n    const searchParams: any = {}\r\n    searchParams.hotel_id = this.hotelId;\r\n    searchParams.start = this.startDate + ':00';\r\n    searchParams.end = this.endDate + ':00';\r\n    if (this.roomCapacity != undefined) {\r\n      searchParams.capacity = this.roomCapacity; \r\n    }\r\n    if (this.rating != undefined) {\r\n      searchParams.rating = this.rating;\r\n    }\r\n    if (this.price != undefined) {\r\n      searchParams.price = this.price;\r\n    }\r\n    if (this.area != undefined) {\r\n      searchParams.area = this.area;\r\n    }\r\n    return searchParams;\r\n  }\r\n\r\n  private checkSearchFormValid(): boolean {\r\n    if (this.startDate == undefined) {\r\n      window.alert('Start date missing');\r\n      return false;\r\n    } else if (this.endDate == undefined) {\r\n      window.alert('End date missing');\r\n      return false;\r\n    } else if (!this.hotelId) {\r\n      window.alert('Hotel ID missing');\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n\r\n  public onCheckIn(modal): void {\r\n    if (!this.checkPaymentForm()) {\r\n      return;\r\n    }\r\n\r\n    this.setCheckInInfo();\r\n    this.apiService.createCheckIn(this.getCheckInParams())\r\n      .subscribe(checkInJson => {\r\n        this.checkIn = new CheckIn();\r\n        this.selectedReservation.reservationType = true;\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    modal.close('');\r\n  }\r\n\r\n  private setCheckInInfo(): void {\r\n    this.checkIn.hotelId = this.selectedReservation.hotelId;\r\n    this.checkIn.roomNumber = this.selectedReservation.roomNumber;\r\n    this.checkIn.startDate = this.selectedReservation.startDate;\r\n    this.checkIn.endDate = this.selectedReservation.endDate;\r\n  }\r\n\r\n  private getCheckInParams(): {} {\r\n    const checkInParams: any = {};\r\n    checkInParams.hotel_id = this.checkIn.hotelId;\r\n    checkInParams.room_number = this.checkIn.roomNumber;\r\n    checkInParams.start_date = this.checkIn.startDate;\r\n    checkInParams.end_date = this.checkIn.endDate;\r\n    checkInParams.employee_sin = this.checkIn.employeeSin;\r\n    checkInParams.payment = this.checkIn.payment;\r\n    return checkInParams;\r\n  }\r\n\r\n  private checkPaymentForm(): boolean {\r\n    if (!this.checkIn.employeeSin) {\r\n      window.alert('Employee sin missing');\r\n      return false;\r\n    }\r\n    if (!this.checkIn.payment) {\r\n      window.alert('Payment missing');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private getReservations(): void {\r\n    this.apiService.getReservations()\r\n      .subscribe(reservationsJson => {\r\n        this.reservations = [];\r\n        for (const reservationJson of reservationsJson) {\r\n          this.reservations.push(this.apiService.parseToReservation(reservationJson));\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  public openCheckIn(checkin: NgbModal, reservation: Reservation): void {\r\n    this.selectedReservation = reservation;\r\n    this.modalService.open(checkin, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n    }, (reason) => {\r\n    });\r\n  }\r\n\r\n  public openRenting(renting: NgbModal, room: Room): void {\r\n    this.selectedRoom = room;\r\n    this.modalService.open(renting, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n    }, (reason) => {\r\n    });\r\n  }\r\n\r\n  public onCreateRenting(modal): void {\r\n    if (!this.checkRentFormValid()) {\r\n      return;\r\n    }\r\n\r\n    this.apiService.createRenting(this.getRentParams())\r\n      .subscribe(renting => {\r\n        const newRooms = [];\r\n        for (const room of this.rooms) {\r\n          if (room.hotel.hotelId != this.selectedRoom.hotel.hotelId || room.roomNumber != this.selectedRoom.roomNumber) {\r\n            newRooms.push(room);\r\n          }\r\n        }\r\n        this.rooms = newRooms;\r\n        this.getReservations();\r\n      },\r\n      (error) => {\r\n        window.alert('Error in booking of renting');\r\n        console.log(error);\r\n      }\r\n    );\r\n\r\n    modal.close('Save click');\r\n  }\r\n\r\n  private getRentParams() {\r\n    const rentParams: any = {};\r\n    rentParams.hotel_id = this.selectedRoom.hotel.hotelId;\r\n    rentParams.room_number = this.selectedRoom.roomNumber;\r\n    rentParams.employee_sin = this.checkIn.employeeSin;\r\n    rentParams.payment = this.checkIn.payment;\r\n    rentParams.start = this.startDate + ':00';\r\n    rentParams.end = this.endDate + ':00';\r\n    rentParams.customer_sin = this.customer.sin;\r\n    rentParams.given_name = this.customer.givenName;\r\n    rentParams.family_name = this.customer.familyName;\r\n    rentParams.street_name = this.customer.streetName;\r\n    rentParams.street_number = this.customer.streetNumber;\r\n    rentParams.city = this.customer.city;\r\n    rentParams.state = this.customer.state;\r\n    rentParams.country = this.customer.country;\r\n    return rentParams;\r\n  }\r\n\r\n  private checkRentFormValid(): boolean {\r\n    if (!this.customer.sin) {\r\n      window.alert('Sin is missing');\r\n      return false;\r\n    } else if (!this.customer.givenName) {\r\n      window.alert('Given name is missing');\r\n      return false;\r\n    } else if (!this.customer.familyName) {\r\n      window.alert('Family name is missing');\r\n      return false;\r\n    } else if (!this.customer.streetName) {\r\n      window.alert('Street name is missing');\r\n      return false;\r\n    } else if (!this.customer.streetNumber) {\r\n      window.alert('Street number is missing');\r\n      return false;\r\n    } else if (!this.customer.city) {\r\n      window.alert('City is missing');\r\n      return false;\r\n    } else if (!this.customer.state) {\r\n      window.alert('State is missing');\r\n      return false;\r\n    } else if (!this.customer.country) {\r\n      window.alert('Country is missing');\r\n      return false;\r\n    } else if (!this.checkIn.payment) {\r\n      window.alert('Payment is missing');\r\n      return false;\r\n    } else if (!this.checkIn.employeeSin) {\r\n      window.alert('Employee SIN is missing');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class = 'container'>\\r\\n  <div class = 'row'>\\r\\n    <div class = 'col-md-12'>\\r\\n      <button type = 'button' class = 'btn btn-primary' (click)='goToSearch()' >Search Hotels</button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class = 'row'>\\r\\n      <div class = 'col-md-12'>\\r\\n        <button type = 'button' class = 'btn btn-primary' (click)='goToEmployee()'>Employee</button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <div class = 'col-md-12'>\\r\\n        <button type = 'button' class = 'btn btn-primary' (click)='goToAdmin()'>Admin</button>\\r\\n      </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  goToEmployee() {\r\n    this.router.navigate(['employee']);\r\n  }\r\n\r\n  goToSearch() {\r\n    this.router.navigate(['search']);\r\n  }\r\n\r\n  goToAdmin() {\r\n    this.router.navigate(['admin']);\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbGlzdHVuaXQvbGlzdHVuaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\">\\n    <table class=\\\"table table-striped\\\">\\n        <thead>\\n            <th>id</th>\\n            <th>name</th>\\n            <th>rating</th>\\n            <th>Operations</th>\\n        </thead>\\n        <tbody>\\n            <tr *ngFor=\\\"let unit of units\\\">\\n                <td>{{unit.id}}</td>\\n                <td>{{unit.name}}</td>\\n                <td>{{unit.rating}}</td>\\n                <td>\\n                    <button class=\\\"btn btn-danger\\\" (click)=\\\"deleteUnit(unit)\\\" >Delete</button>\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"updateUnit(unit)\\\">Update</button>\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"addUnit()\\\">New Unit</button>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Unit } from '../../models/unit';\r\nimport { UnitService } from '../../services/unit.service';\r\nimport { Router } from '@angular/router';\r\n\r\nimport {ActivatedRoute} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-listunit',\r\n  templateUrl: './listunit.component.html',\r\n  styleUrls: ['./listunit.component.css']\r\n})\r\nexport class ListunitComponent implements OnInit {\r\n\r\n  private units: Unit[];\r\n  private description:string;\r\n  private id:number=-1;\r\n  constructor(private _unitService:UnitService, private _router:Router,private route:ActivatedRoute) { }\r\n\r\n  ngOnInit() { \r\n    this.route.paramMap.subscribe( (paramMap) =>{this.description = paramMap.get('description');});\r\n    this.description = this.route.snapshot.queryParams[\"description\"];\r\n    var test = this.route.snapshot.paramMap.get('id');\r\n    if(test!=null){\r\n        this.id = Number.parseInt(test);\r\n    } else {\r\n        //\r\n    }\r\n    console.log(this.description);\r\n    console.log(this.id);\r\n    if(this.id==-1){\r\n        if (this.description==undefined){ //*/\r\n            this._unitService.getUnits().subscribe((units) => {\r\n            console.log(units); \r\n            this.units=units;\r\n            } , \r\n            (error) => {\r\n                console.log(error);\r\n            });\r\n            console.log('description undefined'); ///*\r\n        } else {\r\n            this._unitService.getUnitsString(this.description).subscribe((units) => {\r\n            console.log(units); \r\n            this.units=units;\r\n            } , \r\n            (error) => {\r\n                console.log(error);\r\n            });\r\n            console.log('description defined');\r\n        }\r\n    } else {\r\n            this._unitService.getUnit(this.id).subscribe((units) => {\r\n            console.log(units); \r\n            this.units=units;\r\n            } , \r\n            (error) => {\r\n                console.log(error);\r\n            });\r\n            console.log('id defined');\r\n    } //*/\r\n  }\r\n\r\n  deleteUnit(unit:Unit){\r\n    this._unitService.deletetUnit(unit.id).subscribe((data) => {\r\n        this.units.splice(this.units.indexOf(unit),1);\r\n    },\r\n    (error) => {\r\n        console.log(error);\r\n    });\r\n  }\r\n\r\n  updateUnit(unit:Unit){\r\n      this._unitService.setter(unit);\r\n      this._router.navigate(['/op']);\r\n  }\r\n\r\n  addUnit(){\r\n      let unit = new Unit();\r\n      this._unitService.setter(unit);\r\n      this._router.navigate(['/op']);\r\n  }\r\n\r\n  //this is how to navigate to another page\r\n  /*\r\n  goProducts() {\r\n      this._router.navigate(['/products'], { queryParams: { order: 'popular' } });\r\n  } */\r\n\r\n\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2VhcmNoL3NlYXJjaC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class = 'container'>\\r\\n  <div class = 'row'>\\r\\n\\r\\n    <div class = 'col-md-4'>\\r\\n      <div class = 'row'>\\r\\n        <div class = 'col-md-12'>\\r\\n          <button type = 'button' class = 'btn btn-primary' (click) = 'onBack()'>Back</button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <form (ngSubmit) = 'onSearch()'>\\r\\n        <div class = 'row'>\\r\\n          <label>\\r\\n            Hotel Chain\\r\\n            <select class = 'form-control' name = 'hotelChain' [(ngModel)] = 'hotelChain'>\\r\\n              <option *ngFor = 'let hotelChain of hotelChains' [ngValue] = 'hotelChain'>{{hotelChain}}</option>\\r\\n            </select>\\r\\n          </label>\\r\\n        </div>\\r\\n        <div class = 'row'>\\r\\n          <label>\\r\\n            Start Date\\r\\n            <input type=\\\"datetime-local\\\" \\r\\n                    class = 'form-control'\\r\\n                    name=\\\"startDate\\\" value=\\\"0000-00-00T00:00\\\"\\r\\n                    min=\\\"0000-00-00T00:00\\\"\\r\\n                    [(ngModel)] =\\\"startDate\\\">\\r\\n          </label>\\r\\n        </div>\\r\\n        <div class = 'row'>\\r\\n          <label>\\r\\n            End Date\\r\\n            <input type=\\\"datetime-local\\\" \\r\\n                    class = 'form-control'\\r\\n                    name=\\\"endDate\\\" value=\\\"0000-00-00T00:00\\\"\\r\\n                    min=\\\"0000-00-00T00:00\\\"\\r\\n                    [(ngModel)] = 'endDate'>\\r\\n          </label>     \\r\\n        </div>\\r\\n        <div class = 'row'>\\r\\n          <label>\\r\\n            City\\r\\n            <input class = 'form-control' type = 'text' name = 'city' [(ngModel)] = 'city'>\\r\\n          </label>\\r\\n        </div>\\r\\n        <div class = 'row'>\\r\\n          <label>\\r\\n            State\\r\\n            <input class = 'form-control' type = 'text' maxlength = '2' name = 'state' [(ngModel)] = 'state'>\\r\\n          </label>\\r\\n        </div>\\r\\n        <div class = 'row'>\\r\\n          <label>\\r\\n            Country\\r\\n            <input class = 'form-control' type = 'text' maxlength = '2' name = 'country' [(ngModel)] = 'country'>\\r\\n          </label>\\r\\n        </div>\\r\\n        <div class = 'row'>     \\r\\n          <label>\\r\\n              Rating (min)\\r\\n              <select class = 'form-control' name = 'rating' [(ngModel)] = 'rating'>\\r\\n                <option value = 'undefined'></option>\\r\\n                <option>1</option>\\r\\n                <option>2</option>\\r\\n                <option>3</option>\\r\\n                <option>4</option>\\r\\n                <option>5</option>\\r\\n              </select>\\r\\n            </label>         \\r\\n        </div>\\r\\n        <div class = 'row'>\\r\\n          <label>\\r\\n            Room Capacity (# people) (min)\\r\\n            <input class = 'form-control' min = '0' type = 'number' name = 'roomCapacity' [(ngModel)] = 'roomCapacity'>\\r\\n          </label>\\r\\n        </div>\\r\\n        <div class = 'row'>\\r\\n          <label>\\r\\n            Area (ft^2) (min)\\r\\n            <input class = 'form-control' min = '0' type = 'number' name = 'area' [(ngModel)] = 'area'>\\r\\n          </label>\\r\\n        </div>\\r\\n        <div class = 'row'>\\r\\n          <label>\\r\\n            Price ($) (max)\\r\\n            <input class = 'form-control' min = '0' type = 'number' name = 'price' [(ngModel)] = 'price'>\\r\\n          </label>\\r\\n        </div>\\r\\n        <div class = 'row'>\\r\\n          <button type = 'submit' class = 'btn btn-primary'>Search</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n\\r\\n    <div class = 'col-md-8'>\\r\\n      <table class = 'table table-striped'>\\r\\n        <thead>\\r\\n          <th>Hotel Chain</th>\\r\\n          <th>Hotel ID</th>\\r\\n          <th>Address</th>\\r\\n          <th>Room Number</th>\\r\\n          <th>View Type</th>\\r\\n          <th>Capacity</th>\\r\\n          <th>Price ($ CAD)</th>\\r\\n          <th>Extendable</th>\\r\\n          <th>Area (ft^2)</th>\\r\\n          <th>Amenities</th>\\r\\n          <th></th>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor = 'let room of rooms'>\\r\\n            <td>{{room.hotel.hotelChain.hcName}}</td>\\r\\n            <td>{{room.hotel.hotelId}}</td>\\r\\n            <td>{{room.hotel.getAddress()}}</td>\\r\\n            <td>{{room.roomNumber}}</td>\\r\\n            <td>{{room.viewType}}</td>\\r\\n            <td>{{room.capacity}}</td>\\r\\n            <td>${{room.price}} CAD</td>\\r\\n            <td>{{room.extendable ? 'Yes' : 'No'}}</td>\\r\\n            <td>{{room.area}}</td>\\r\\n            <td>\\r\\n              <h6 *ngFor = 'let amenity of room.amenities'>\\r\\n                amenity\\r\\n              </h6>\\r\\n            </td>\\r\\n            <td>\\r\\n              <button type = 'button' class = 'btn btn-primary' (click) = 'open(booking, room)'>Book</button>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #booking let-modal>\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Book Room</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <h5>Customer Information</h5>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Customer SIN \\r\\n        <input type = 'text' class = 'form-control' name = 'sin' [(ngModel)] = 'customer.sin'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Given name\\r\\n        <input type = 'text' class = 'form-control' name = 'givenName' [(ngModel)] = 'customer.givenName'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Family name\\r\\n        <input type = 'text' class = 'form-control' name = 'familyName' [(ngModel)] = 'customer.familyName'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Street name\\r\\n        <input type = 'text' class = 'form-control' name = 'streetName' [(ngModel)] = 'customer.streetName'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Street number\\r\\n        <input type = 'number' min = '0' class = 'form-control' name = 'streetNumber' [(ngModel)] = 'customer.streetNumber'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        City\\r\\n        <input type = 'text' class = 'form-control' name = 'city' [(ngModel)] = 'customer.city'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        State\\r\\n        <input type = 'text' class = 'form-control' maxlength = '2' name = 'state' [(ngModel)] = 'customer.state'>\\r\\n      </label>\\r\\n    </div>\\r\\n    <div class = 'row'>\\r\\n      <label>\\r\\n        Country\\r\\n        <input type = 'text' class = 'form-control' maxlength = '2' name = 'country' [(ngModel)] = 'customer.country'>\\r\\n      </label>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"onBookRoom(modal)\\\">Book</button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n  \\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { Room } from '../../models/room.model';\r\nimport { Hotel } from '../../models/hotel.model';\r\nimport { Customer } from '../../models/customer.model';\r\nimport { Reservation } from '../../models/reservation.model';\r\n\r\n\r\nimport { ApiService } from '../../services/api.service';\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n  private hotelChains: string[];\r\n  private hotelChain: string;\r\n  private startDate: string;\r\n  private endDate: string;\r\n  private city: string;\r\n  private state: string;\r\n  private country: string;\r\n  private rating: number;\r\n  private roomCapacity: number;\r\n  private area: number;\r\n  private price: number;\r\n\r\n  private customer: Customer;\r\n\r\n  private rooms: Room[];\r\n  private selectedRoom: Room;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private router: Router,\r\n    private location: Location,\r\n    private modalService: NgbModal) { }\r\n\r\n  ngOnInit() {\r\n    this.customer = new Customer();\r\n    this.rooms = [];\r\n    this.getHotelChainNames();\r\n  }\r\n\r\n  public onBack(): void {\r\n    this.location.back();\r\n  }\r\n\r\n  public onSearch(): void {\r\n    if (!this.checkSearchFormValid()) {\r\n      return;\r\n    }\r\n    this.apiService.getRoomsSearch(this.getSearchParams())\r\n      .subscribe(roomsJson => {\r\n        if (roomsJson.length == 0) {\r\n          window.alert('No results found for given search');\r\n          return;\r\n        }\r\n        this.rooms = [];\r\n        for (const roomJson of roomsJson) {\r\n          this.rooms.push(this.apiService.parseToRoom(roomJson));\r\n        }\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // private getRoomAmenities(): void {\r\n  //   for (let i = 0; i < this.rooms.length; i++) {\r\n  //     this.apiService.getRoomAmenities(this.rooms[i].roomNumber, this.rooms[i].hotel.hotelId)\r\n  //       .subscribe(amenityJson => {\r\n  //         const hotelId = amenityJson[0]\r\n  //         const amenities = [];\r\n  //         for (const amenity of amenityJson) {\r\n  //           amenities.push(amenity);\r\n  //         }\r\n  //         for (let i = 0; i < this.rooms.length; i++) {\r\n  //           if (this.rooms[i].hotel.hotelId == amenityJson.hotel_id && this.rooms[i].roomNumber == amenityJson.room_number) {\r\n  //             this.rooms[i].amenities = amenities;\r\n  //           }\r\n  //         }\r\n  //       },\r\n  //       (error) => {\r\n  //         console.log(error);\r\n  //       });\r\n  //   }\r\n  // }\r\n\r\n  private getHotelChainNames(): void {\r\n    this.apiService.getHotelChainNames()\r\n      .subscribe(hotelChainNames => {\r\n        this.hotelChains = hotelChainNames;\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  private getSearchParams() {\r\n    const searchParams: any = {}\r\n    searchParams.hc_name = this.hotelChain;\r\n    searchParams.start = this.startDate + ':00';\r\n    searchParams.end = this.endDate + ':00';\r\n    searchParams.city = this.city;\r\n    searchParams.state = this.state;\r\n    searchParams.country = this.country;\r\n    if (this.roomCapacity != undefined) {\r\n      searchParams.capacity = this.roomCapacity; \r\n    }\r\n    if (this.rating != undefined) {\r\n      searchParams.rating = this.rating;\r\n    }\r\n    if (this.price != undefined) {\r\n      searchParams.price = this.price;\r\n    }\r\n    if (this.area != undefined) {\r\n      searchParams.area = this.area;\r\n    }\r\n    return searchParams;\r\n  }\r\n\r\n  private checkSearchFormValid(): boolean {\r\n    if (!this.hotelChain) {\r\n      window.alert('Hotel Chain missing');\r\n      return false;\r\n    } else if (this.startDate == undefined) {\r\n      window.alert('Start date missing');\r\n      return false;\r\n    } else if (this.endDate == undefined) {\r\n      window.alert('End date missing');\r\n      return false;\r\n    } else if (!this.city) {\r\n      window.alert('City is missing');\r\n      return false;\r\n    } else if (!this.state) {\r\n      window.alert('State is missing');\r\n      return false;\r\n    } else if (!this.country) {\r\n      window.alert('Country is missing');\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  public open(booking: NgbModal, room: Room): void {\r\n    this.selectedRoom = room;\r\n    this.modalService.open(booking, {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\r\n    }, (reason) => {\r\n    });\r\n  }\r\n\r\n  public onBookRoom(modal): void {\r\n    if (!this.checkBookFormValid()) {\r\n      return;\r\n    }\r\n    this.apiService.createReservation(this.getBookParams())\r\n      .subscribe(reservation => {\r\n        window.alert('Successfully booked');\r\n        const newRooms = [];\r\n        for (const room of this.rooms) {\r\n          if (room.hotel.hotelId != this.selectedRoom.hotel.hotelId || room.roomNumber != this.selectedRoom.roomNumber) {\r\n            newRooms.push(room);\r\n          }\r\n        }\r\n        this.rooms = newRooms;\r\n      },\r\n      (error) => {\r\n        window.alert('Error in booking');\r\n        console.log(error);\r\n      }\r\n    );\r\n\r\n    modal.close('Save click');\r\n  }\r\n\r\n  private getBookParams() {\r\n    const bookParams: any = {};\r\n    bookParams.hotel_id = this.selectedRoom.hotel.hotelId;\r\n    bookParams.room_number = this.selectedRoom.roomNumber;\r\n    bookParams.start = this.startDate + ':00';\r\n    bookParams.end = this.endDate + ':00';\r\n    bookParams.customer_sin = this.customer.sin;\r\n    bookParams.given_name = this.customer.givenName;\r\n    bookParams.family_name = this.customer.familyName;\r\n    bookParams.street_name = this.customer.streetName;\r\n    bookParams.street_number = this.customer.streetNumber;\r\n    bookParams.city = this.customer.city;\r\n    bookParams.state = this.customer.state;\r\n    bookParams.country = this.customer.country;\r\n    return bookParams;\r\n  }\r\n\r\n  private checkBookFormValid(): boolean {\r\n    if (!this.customer.sin) {\r\n      window.alert('Sin is missing');\r\n      return false;\r\n    } else if (!this.customer.givenName) {\r\n      window.alert('Given name is missing');\r\n      return false;\r\n    } else if (!this.customer.familyName) {\r\n      window.alert('Family name is missing');\r\n      return false;\r\n    } else if (!this.customer.streetName) {\r\n      window.alert('Street name is missing');\r\n      return false;\r\n    } else if (!this.customer.streetNumber) {\r\n      window.alert('Street number is missing');\r\n      return false;\r\n    } else if (!this.customer.city) {\r\n      window.alert('City is missing');\r\n      return false;\r\n    } else if (!this.customer.state) {\r\n      window.alert('State is missing');\r\n      return false;\r\n    } else if (!this.customer.country) {\r\n      window.alert('Country is missing');\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdW5pdC1mb3JtL3VuaXQtZm9ybS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n    <form (ngSubmit)=\\\"processForm()\\\">\\n        <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" name=\\\"id\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"unit.id\\\">\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Name</label>\\n            <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"unit.name\\\">\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"rating\\\">Rating</label>\\n            <input type=\\\"text\\\" name=\\\"rating\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"unit.rating\\\">\\n        </div>\\n        <input type=\\\"submit\\\" value=\\\"save\\\" class=\\\"btn btn-success\\\">\\n    </form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Unit } from '../../models/unit';\r\nimport { Router } from '@angular/router';\r\nimport { UnitService } from '../../services/unit.service';\r\n@Component({\r\n  selector: 'app-unit-form',\r\n  templateUrl: './unit-form.component.html',\r\n  styleUrls: ['./unit-form.component.css']\r\n})\r\nexport class UnitFormComponent implements OnInit {\r\n\r\n  private unit:Unit;\r\n  \r\n  constructor(private _unitService:UnitService, private _router:Router) { }\r\n\r\n  ngOnInit() {\r\n      this.unit=this._unitService.getter();\r\n  }\r\n\r\n  processForm(){\r\n      if(this.unit.id==undefined){\r\n        this._unitService.createUnit(this.unit).subscribe( (unit) => {\r\n            console.log(unit);\r\n            console.log('create');\r\n            this._router.navigate(['/unittest/units']);\r\n        }, (error) => {\r\n            console.log(error);\r\n        });\r\n      } else {\r\n        this._unitService.updateUnit(this.unit).subscribe( (unit) => {\r\n            console.log(unit);\r\n            console.log('update');\r\n            this._router.navigate(['/unittest/units']);\r\n        }, (error) => {\r\n            console.log(error);\r\n        });\r\n      }\r\n  }\r\n\r\n}\r\n","export class CheckIn {\r\n    employeeSin: string;\r\n    hotelId: number;\r\n    roomNumber: number;\r\n    startDate: Date;\r\n    endDate: Date;\r\n    payment: number;\r\n}","export class Customer {\r\n    sin: string;\r\n    givenName: string;\r\n    familyName: string;\r\n    streetName: string;\r\n    streetNumber: number;\r\n    city: string;\r\n    state: string;\r\n    country: string;\r\n\r\n    public getName(): string {\r\n        return this.givenName + ' ' + this.familyName;\r\n    }\r\n\r\n    public getAddress(): string {\r\n        return this.streetNumber + ' ' + this.streetName + ', ' + this.city + ', ' + this.state + ', ' + this.country;\r\n    }\r\n}","import { Hotel } from './hotel.model';\r\n\r\nexport class Employee {\r\n    sin: string;\r\n    givenName: string;\r\n    familyName: string;\r\n    streetName: string;\r\n    streetNumber: number;\r\n    city: string;\r\n    state: string;\r\n    country: string;\r\n    hotel: Hotel;\r\n\r\n    constructor() {\r\n        this.hotel = new Hotel();\r\n    }\r\n\r\n    public getName(): string {\r\n        return this.givenName + ' ' + this.familyName;\r\n    }\r\n\r\n    public getAddress(): string {\r\n        return this.streetNumber + ' ' + this.streetName + ', ' + this.city + ', ' + this.state + ', ' + this.country;\r\n    }\r\n}","import { HotelChain } from './hotelchain.model';\r\n\r\nexport class Hotel {\r\n    hotelChain: HotelChain;\r\n    hotelId: number;\r\n    streetName: string;\r\n    streetNumber: number;\r\n    city: string;\r\n    state: string;\r\n    country: string;\r\n    rating: number;\r\n    phoneNumber: string;\r\n    numberOfRooms: number;\r\n\r\n    constructor() {\r\n        this.hotelChain = new HotelChain();\r\n    }\r\n\r\n    public getAddress(): string {\r\n        return this.streetNumber + ' ' + this.streetName + ' ' + this.city + ', ' + this.state + ', ' + this.country;\r\n    }\r\n}","export class HotelChain {\r\n    hcName: string;\r\n    numberOfHotels: number;\r\n}","import { Customer } from './customer.model';\r\nimport { Room } from './room.model';\r\n\r\nexport class Reservation {\r\n    hotelId: number;\r\n    roomNumber: number;\r\n    room: Room;\r\n    startDate: Date;\r\n    endDate: Date;\r\n    reservationType: boolean;\r\n    customer: Customer;\r\n}","import { Hotel } from './hotel.model';\r\n\r\nexport class Room {\r\n    hotel: Hotel = new Hotel();\r\n    roomNumber: number;\r\n    viewType: string;\r\n    capacity: number;\r\n    price: number;\r\n    extendable: boolean;\r\n    area: number;\r\n    amenities: string[] = [];\r\n\r\n}","export class Unit {\r\n    id: number;\r\n    name: string;\r\n    rating: number;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\r\nimport { HttpClient, HttpParams, HttpErrorResponse} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from \"rxjs/operators\";\r\n\r\nimport { Room } from '../models/room.model';\r\nimport { Hotel } from '../models/hotel.model';\r\nimport { HotelChain } from '../models/hotelchain.model';\r\nimport { Reservation } from '../models/reservation.model';\r\nimport { Customer } from '../models/customer.model';\r\nimport { CheckIn } from '../models/checkin.model';\r\nimport { Employee } from '../models/employee.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ApiService {\r\n  private baseUrl = 'http://localhost:8080/';\r\n  private headers = new Headers({'Content-Type': 'application/json'});\r\n  private options = new RequestOptions({headers: this.headers});\r\n\r\n  constructor(\r\n    private http: Http,\r\n    private httpClient: HttpClient) { }\r\n\r\n  public getHotelChainNames(): Observable<string[]> {\r\n    const getUrl = this.baseUrl + 'hotelchains';\r\n    return this.httpClient.get<string[]>(getUrl);\r\n  }\r\n\r\n  public getHotels(): Observable<Hotel[]> {\r\n    const getUrl = this.baseUrl + 'hotels';\r\n    return this.httpClient.get<Hotel[]>(getUrl);\r\n  }\r\n\r\n  public getRooms(): Observable<Room[]> {\r\n    const getUrl = this.baseUrl + 'rooms';\r\n    return this.httpClient.get<Room[]>(getUrl);\r\n  }\r\n\r\n  public getRoomsByHotelIdSearch(searchParameters): Observable<Room[]> {\r\n    console.log(searchParameters);\r\n    const getUrl = this.baseUrl + 'rooms/' + searchParameters.hotel_id + '/query';\r\n    return this.httpClient.get<Room[]>(getUrl, {params: searchParameters});\r\n  }\r\n\r\n  public getRoomsSearch(searchParameters): Observable<Room[]> {\r\n    const getUrl = this.baseUrl + 'rooms/query';\r\n    return this.httpClient.get<Room[]>(getUrl, {params: searchParameters});\r\n  }\r\n\r\n  public getRoomAmenities(roomNumber: number, hotelId: number): Observable<[]> {\r\n    const getUrl = this.baseUrl + 'rooms/' + hotelId + '/' + roomNumber + '/amenities';\r\n    return this.httpClient.get<[]>(getUrl);\r\n  }\r\n\r\n  public getCustomers(): Observable<Customer[]> {\r\n    const getUrl = this.baseUrl + 'customers';\r\n    return this.httpClient.get<Customer[]>(getUrl);\r\n  }\r\n\r\n  public getEmployees(): Observable<Employee[]> {\r\n    const getUrl = this.baseUrl + 'employees';\r\n    return this.httpClient.get<Employee[]>(getUrl);\r\n  }\r\n\r\n  public getReservations(): Observable<Reservation[]> {\r\n    const getUrl = this.baseUrl + 'rooms/reservations';\r\n    return this.httpClient.get<Reservation[]>(getUrl);\r\n  }\r\n\r\n  public createReservation(reservationParams): Observable<Reservation> {\r\n    const postUrl = this.baseUrl + 'rooms/reservation';\r\n    const params = {start: reservationParams.start, end: reservationParams.end};\r\n    return this.httpClient.post<Reservation>(postUrl, reservationParams, {params: params});\r\n  }\r\n\r\n  public createCheckIn(checkInParams): Observable<CheckIn> {\r\n    const postUrl = this.baseUrl + 'rooms/checkin/';\r\n    const params = {start: checkInParams.start_date.toISOString(), \r\n                    end: checkInParams.end_date.toISOString(), \r\n                    payment: '' + checkInParams.payment};\r\n    return this.httpClient.post<CheckIn>(postUrl, checkInParams, {params: params});\r\n  }\r\n\r\n  public createRenting(rentingParams) {\r\n    const postUrl = this.baseUrl + 'rooms/reservation/checkin';\r\n    const params = {start: rentingParams.start, end: rentingParams.end};\r\n    return this.httpClient.post(postUrl, rentingParams, {params: params});\r\n  }\r\n\r\n  public createCustomer(customerParams) {\r\n    const postUrl = this.baseUrl + 'backend/add/customer';\r\n    return this.httpClient.post(postUrl, customerParams);\r\n  }\r\n\r\n  public createEmployee(employeeParams) {\r\n    const postUrl = this.baseUrl + 'backend/add/employee';\r\n    return this.httpClient.post(postUrl, employeeParams);\r\n  }\r\n\r\n  public createHotel(hotelParams) {\r\n    const postUrl = this.baseUrl + 'backend/add/hotel';\r\n    return this.httpClient.post(postUrl, hotelParams);\r\n  }\r\n\r\n  public createRoom(roomParams) {\r\n    const postUrl = this.baseUrl + 'backend/add/room';\r\n    return this.httpClient.post(postUrl, roomParams);\r\n  }\r\n\r\n\r\n  public updateCustomer(customerParams) {\r\n    const putUrl = this.baseUrl + '/backend/update/customer';\r\n    return this.httpClient.put(putUrl, customerParams);\r\n  }\r\n\r\n  public updateEmployee(employeeParams) {\r\n    const putUrl = this.baseUrl + '/backend/update/employee';\r\n    return this.httpClient.put(putUrl, employeeParams);\r\n  }\r\n\r\n  public updateHotel(hotelParams) {\r\n    const putUrl = this.baseUrl + '/backend/update/hotel';\r\n    return this.httpClient.put(putUrl, hotelParams);\r\n  }\r\n\r\n  public updateRoom(roomParams) {\r\n    const putUrl = this.baseUrl + '/backend/update/room';\r\n    return this.httpClient.put(putUrl, roomParams);\r\n  }\r\n\r\n\r\n  public deleteCustomer(customerSin: string) {\r\n    const deleteUrl = this.baseUrl + 'backend/delete/customer';\r\n    const params = {customer_sin: customerSin}\r\n    return this.httpClient.delete(deleteUrl, {params: params});\r\n  }\r\n\r\n  public deleteEmployee(employeeSin: string) {\r\n    const deleteUrl = this.baseUrl + 'backend/delete/employee';\r\n    const params = {employee_sin: employeeSin};\r\n    return this.httpClient.delete(deleteUrl, {params: params});\r\n  }\r\n\r\n  public deleteHotel(hotelId: number) {\r\n    const deleteUrl = this.baseUrl + 'backend/delete/hotel';\r\n    const params = {hotel_id: ''+hotelId};\r\n    return this.httpClient.delete(deleteUrl, {params: params});\r\n  }\r\n\r\n  public deleteRoom(hotelId: number, roomNumber: number) {\r\n    const deleteUrl = this.baseUrl + 'backend/delete/room';\r\n    const params = {hotel_id: ''+hotelId, room_number: ''+roomNumber};\r\n    return this.httpClient.delete(deleteUrl, {params: params});\r\n  }\r\n\r\n  public parseToRoom(roomJson: any): Room {\r\n    const room = new Room();\r\n    room.hotel = this.parseToHotel(roomJson.hotel);\r\n    room.roomNumber = roomJson.room_id.room_number;\r\n    room.viewType = roomJson.view_type;\r\n    room.capacity = roomJson.capacity;\r\n    room.price = roomJson.price;\r\n    room.extendable = roomJson.extendable;\r\n    room.area = roomJson.area;\r\n    return room;\r\n  }\r\n\r\n  public parseToHotel(hotelJson: any): Hotel {\r\n    const hotel = new Hotel();\r\n    hotel.hotelChain = this.parseToHotelChain(hotelJson.hotelChain);\r\n    hotel.hotelId = hotelJson.hotel_id;\r\n    hotel.streetName = hotelJson.street_name;\r\n    hotel.streetNumber = hotelJson.street_number;\r\n    hotel.city = hotelJson.city;\r\n    hotel.state = hotelJson.state;\r\n    hotel.country = hotelJson.country;\r\n    hotel.rating = hotelJson.rating;\r\n    hotel.phoneNumber = hotelJson.phone_number;\r\n    hotel.numberOfRooms = hotelJson.number_of_rooms;\r\n    return hotel;\r\n  }\r\n\r\n  public parseToHotelChain(hotelChainJson: any): HotelChain {\r\n    const hotelChain = new HotelChain();\r\n    hotelChain.hcName = hotelChainJson.hc_name;\r\n    hotelChain.numberOfHotels = hotelChainJson.number_of_hotels;\r\n    return hotelChain;\r\n  }\r\n\r\n  public parseToReservation(reservationJson: any): Reservation {\r\n    const reservation = new Reservation();\r\n    reservation.hotelId = reservationJson.hotel_id;\r\n    reservation.roomNumber = reservationJson.room_number;\r\n    reservation.room = this.parseToRoom(reservationJson.room);\r\n    reservation.startDate = new Date(reservationJson.start_date);\r\n    reservation.endDate = new Date(reservationJson.end_date);\r\n    reservation.reservationType = reservationJson.reservation_type;\r\n    reservation.customer = this.parseToCustomer(reservationJson.customer);\r\n    return reservation;\r\n  }\r\n\r\n  public parseToCustomer(customerJson: any): Customer {\r\n    const customer = new Customer();\r\n    customer.sin = customerJson.sin;\r\n    customer.givenName = customerJson.given_name;\r\n    customer.familyName = customerJson.family_name;\r\n    customer.streetName = customerJson.street_name;\r\n    customer.streetNumber = customerJson.street_number;\r\n    customer.city = customerJson.city;\r\n    customer.state = customerJson.state;\r\n    customer.country = customerJson.country;\r\n    return customer;\r\n  }\r\n\r\n  public parseToEmployee(employeeJson: any): Employee {\r\n    const employee = new Employee();\r\n    employee.sin = employeeJson.sin;\r\n    employee.givenName = employeeJson.given_name;\r\n    employee.familyName = employeeJson.family_name;\r\n    employee.streetName = employeeJson.street_name;\r\n    employee.streetNumber = employeeJson.street_number;\r\n    employee.city = employeeJson.city;\r\n    employee.state = employeeJson.state;\r\n    employee.country = employeeJson.country;\r\n    employee.hotel = this.parseToHotel(employeeJson.hotel);\r\n    return employee;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\r\nimport { HttpErrorResponse} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from \"rxjs/operators\";\r\n//import 'rxjs/add/operator/map';\r\n//import 'rxjs/add/operator/catch';\r\n//import 'rxjs/add/observable/throw';\r\n\r\nimport {Unit} from '../models/unit' ;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UnitService {\r\n  private baseUrl:string = 'http://localhost:8080/units';\r\n  private headers = new Headers({'Content-Type':'application/json'});\r\n  private options = new RequestOptions({headers:this.headers});\r\n  private unit:Unit;\r\n  constructor(private _http:Http) { \r\n  }\r\n\r\n  /*\r\n  getData(): Observable<any> {\r\n       return this.http.get(this.url).map(res => res.json());\r\n}\r\n\r\nNow fetch client id:\r\n\r\nthis.getData().subscribe(\r\n       res => {\r\n           let resources = res[\"resources\"];\r\n           let resource = resources[0];\r\n           console.log(resource[\"client_id\"]);\r\n       }\r\n   );\r\n  */\r\n  getUnits (){\r\n    return this._http.get(this.baseUrl,this.options).pipe(\r\n        map((response:Response) => response.json()) , \r\n        catchError((error: HttpErrorResponse) => {\r\n            return Observable.throw(error || 'SERVER ERROR')\r\n        })\r\n    );\r\n  }\r\n\r\n    getUnitsString (name:string){\r\n    return this._http.get(this.baseUrl+'?description='+name,this.options).pipe(\r\n        map((response:Response) => response.json()) , \r\n        catchError((error: HttpErrorResponse) => {\r\n            return Observable.throw(error || 'SERVER ERROR')\r\n        })\r\n    );\r\n  }\r\n\r\n  getUnit(id:Number){\r\n    return this._http.get(this.baseUrl+'/'+id,this.options).pipe(\r\n        map((response:Response) => response.json()) , \r\n        catchError((error: HttpErrorResponse) => {\r\n            return Observable.throw(error || 'SERVER ERROR')\r\n        })\r\n    );  \r\n  }\r\n\r\n  deletetUnit(id:Number){\r\n    return this._http.delete(this.baseUrl+'/'+id,this.options).pipe(\r\n        map((response:Response) => response.json()) , \r\n        catchError((error: HttpErrorResponse) => {\r\n            return Observable.throw(error || 'SERVER ERROR')\r\n        })\r\n    );  \r\n  }\r\n\r\n  createUnit(unit:Unit){\r\n    return this._http.post(this.baseUrl, JSON.stringify(unit),this.options).pipe(\r\n        map((response:Response) => response.json()) , \r\n        catchError((error: HttpErrorResponse) => {\r\n            return Observable.throw(error || 'SERVER ERROR')\r\n        })\r\n    );  \r\n  }\r\n\r\n  updateUnit(unit:Unit){\r\n    return this._http.put(this.baseUrl, JSON.stringify(unit),this.options).pipe(\r\n        map((response:Response) => response.json()) , \r\n        catchError((error: HttpErrorResponse) => {\r\n            return Observable.throw(error || 'SERVER ERROR')\r\n        })\r\n    );\r\n  }\r\n\r\n  setter(unit:Unit){\r\n      this.unit=unit;\r\n  }\r\n\r\n  getter(){\r\n      return this.unit;\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}